model Event {
  id          String   @id @default(cuid())
  title       String
  description String?
  date        DateTime
  type        String
  userId      String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  user User? @relation(fields: [userId], references: [id])
}

model Like {
  id        String   @id @default(cuid())
  userId    String
  postId    String
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)

  @@unique([userId, postId])
}

enum PostType {
  announcement
  event
  achievement
  plan
}

enum PlanStatus {
  pending
  in_progress
  completed
}

model Post {
  id        String      @id @default(cuid())
  title     String
  content   String      @db.Text
  type      String
  status    PlanStatus?
  dueDate   DateTime?
  authorId  String
  updatedAt DateTime    @updatedAt
  createdAt DateTime    @default(now())

  likes    Like[]
  comments Comment[]
  author   User      @relation("PostAuthor", fields: [authorId], references: [id])
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  postId    String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  post Post @relation(fields: [postId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}
